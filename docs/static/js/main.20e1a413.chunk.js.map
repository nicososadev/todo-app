{"version":3,"sources":["components/08-useReducer/toDoReducer.js","components/08-useReducer/ToDoListItem.js","components/08-useReducer/ToDoList.js","components/08-useReducer/ToDoAdd.js","hooks/useForm.js","components/08-useReducer/ToDoApp.js","index.js"],"names":["toDoReducer","state","action","type","payload","filter","toDo","id","map","done","ToDoListItem","index","handleComplete","handleDelete","className","key","onClick","desc","ToDoList","toDos","i","ToDoAdd","handleAdd","inicialState","useState","values","setValues","cleanInput","handleInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","newToDo","Date","getTime","onChange","placeholder","init","JSON","parse","localStorage","getItem","initialState","ToDoApp","useReducer","dispatch","useEffect","setItem","stringify","length","toDoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20e1a413.chunk.js","sourcesContent":["export const toDoReducer = ( state = [], action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case 'add':\r\n            return [ ...state, action.payload]\r\n    \r\n        case 'delete':\r\n            return state.filter( toDo => toDo.id !== action.payload )\r\n\r\n        case 'complete':\r\n            return state.map( toDo => {\r\n\r\n                if( toDo.id === action.payload ){\r\n                    return{\r\n                        ...toDo,\r\n                        done: true\r\n                    }\r\n                }\r\n                else{\r\n                    return toDo // Retornamos el state actual para no mutarlo\r\n                }\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport const ToDoListItem = ({ toDo, index, handleComplete, handleDelete  }) => {\r\n\r\n    return (\r\n        <li className=\"list-group-item\" key={toDo.id}>\r\n            <p onClick={() => handleComplete(toDo.id)} className={`${toDo.done && 'complete'}`}>{index + 1}. {toDo.desc}</p>\r\n            <button onClick={() => handleDelete(toDo.id)} className=\"btn btn-success\">Termiada</button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToDoListItem } from './ToDoListItem'\r\n\r\n\r\nexport const ToDoList = ({ toDos, handleComplete, handleDelete }) => {\r\n\r\n    return (\r\n\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                toDos.map((toDo, i) => (\r\n                    <ToDoListItem toDo={ toDo } key={ toDo.id } index={ i } handleComplete={ handleComplete } handleDelete={ handleDelete }/>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const ToDoAdd = ({ handleAdd }) => {\r\n\r\n    const [{ description }, handleInputChange, cleanInput] = useForm({\r\n        description: ''\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (description === '') {\r\n            return;\r\n        }\r\n\r\n        const newToDo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n\r\n        handleAdd(newToDo)\r\n\r\n        cleanInput()\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h4>Agregar ToDo</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                <input type=\"text\" className=\"form-control\" onChange={handleInputChange} name=\"description\" value={description} placeholder=\"Nueva Tarea\" />\r\n                <button type=\"submit\" className=\"btn btn-outline-primary mt-3 btn-block\">Agregar</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( inicialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState( inicialState )\r\n\r\n    const cleanInput = () => {\r\n        setValues( inicialState )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, cleanInput ]\r\n\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { toDoReducer } from './toDoReducer'\r\nimport { ToDoList } from './ToDoList'\r\nimport { ToDoAdd } from './ToDoAdd'\r\n\r\nimport './styles.css'\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('toDos')) || []\r\n}\r\n\r\nconst initialState = []\r\n\r\nexport const ToDoApp = () => {\r\n\r\n    const [toDos, dispatch] = useReducer(toDoReducer, initialState, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('toDos', JSON.stringify(toDos))\r\n    }, [toDos])\r\n\r\n    const handleAdd = (newToDo) => {\r\n\r\n        const action = {\r\n            type: 'add',\r\n            payload: newToDo\r\n        }\r\n\r\n        dispatch(action)\r\n    }\r\n\r\n    const handleDelete = (toDoId) => {\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: toDoId\r\n        }\r\n\r\n        dispatch(action)\r\n    }\r\n\r\n    const handleComplete = (toDoId) => {\r\n\r\n        const action = {\r\n            type: 'complete',\r\n            payload: toDoId\r\n        }\r\n\r\n        dispatch(action)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>ToDo App</h1>\r\n            <hr />\r\n\r\n            <h2>ToDo List - {toDos.length}</h2>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <ToDoList toDos={toDos} handleComplete={handleComplete} handleDelete={handleDelete} />\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    <ToDoAdd handleAdd={handleAdd} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { ToDoApp } from './components/08-useReducer/ToDoApp';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { FormCustomHook } from './components/02-useEffect/FormCustomHook';\n// import { MultipleHooks } from './components/03-examples/MultipleHooks';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealRef } from './components/04-useRef/RealRef';\n// import { Layout } from './components/05-useLayoutEffect/LayoutEffect';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { HooksApp } from './HooksApp';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterCustomHook } from './components/01-useState/CounterCustomHook';\n\nReactDOM.render( <ToDoApp />, document.getElementById('root') );"],"sourceRoot":""}